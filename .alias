check_battery () { upower -i /org/freedesktop/UPower/devices/battery_BAT0; }

alias watch='watch -n 1'

stash () { ~/../.i/bin/stash "$@"; }

serve () { python -m SimpleHTTPServer; }

gh-clone () { git clone ssh://github/$1 ; }

unclean-git-subdirs () {
	for x in *
    do 
      if [ -d "$x/.git" ]; then 
        (cd $x; is-git-dir-clean || echo $x)
      fi
    done 
}

randline () { perl -MList::Util -e 'print List::Util::shuffle <>'; }

sls () { ls | perl -e 'print sort { length($a) <=> length($b) } <>' ; }

vocab () { local word="$*"; echo "$word" >> ~/.vocab; }

obpm () { mysql -u root obp_stats "$@" ; }

add-new-wifi () { ssh -X root@localhost nm-connection-editor; }

white-add () { git diff --check && git add -p || echo dirty ; }

connect-wifi () { nmcli dev wifi connect "$@" ; }

all-wifi () { nmcli dev wifi ; }

alias y2="~/Src/scagger/y2"

alias wget='wget --no-check-certificate'

alias dos2unix='dos2unix -q'

map () { cmd=$1; shift; for x in $*; do $cmd $x; done; }

mute () { amixer set Master mute; }

unmute () { amixer set Master unmute; }

lmap () { cmd=$1; shift; for x in $(cat $1); do $cmd $x; done; }

alias w3m='w3m -no-mouse'

alias tda='tda -p medium'

spark () { ( echo "$@"; echo "" ) >> ~/Src/ideas-and-gags/spark; }

gag ()   { ( echo "$@"; echo "" ) >> ~/Src/ideas-and-gags/jokes; }

new-nonce-passwd () {
        local filename="$1"
        (cd ~/Auth && pwgen -1 -s | tee $filename)
}

gpom () { git push origin master; }

email-add-alias () {
        local alias_file=/etc/mail/aliases/no.ucant.org
        TAG=$1
        if [ -n "$TAG" ]; then
                if ! grep -q "^mk270-${TAG}:" $alias_file; then
                        echo "mk270-${TAG}: mk" >> $alias_file
                        echo "Alias for $TAG added:"
                        echo "mk270-${TAG}@no.ucant.org"
                else
                        echo Such an alias already seems to exist
                fi
        else
                echo Usage: email-add-alias TAG
        fi
}

capture-to-pling-git () {
	git init
	git add .
	git commit -m "initial commit"
	create-pling-repo
}

music-rand () {
	(cd ~/Music/trans; \
	mpg123 $(find . -type f -mtime -600 | randline))
}

snmr () {
	sudo service network-manager restart
}

wt () {
	while true; do "$@"; sleep 1; done
}

pchi () {
	ping -n chi
}

add-project () {
	sqlite3 ~/.projects.db "INSERT INTO project (description) VALUES ('$*');"
}

list-projects () {
	sqlite3 ~/.projects.db "SELECT description FROM project;"
}

eurosceptics () {
	palemoon https://www.twitter.com/ &
}

